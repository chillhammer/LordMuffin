// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define RTTR_ENABLE(__VA_ARGS__)
#define RTTR_ENABLE(__VA_ARGS__) public: virtual RTTR_INLINE rttr::type get_type() const { return rttr::detail::get_type_from_instance(this); } virtual RTTR_INLINE void* get_ptr() { return reinterpret_cast<void*>(this); } virtual RTTR_INLINE rttr::detail::derived_info get_derived_info() { return {reinterpret_cast<void*>(this), rttr::detail::get_type_from_instance(this)}; } using base_class_list = TYPE_LIST(__VA_ARGS__); private:
#define RTTR_ENABLE(__VA_ARGS__)
#define RTTR_ENABLE(__VA_ARGS__) public: virtual RTTR_INLINE rttr::type get_type() const { return rttr::detail::get_type_from_instance(this); } virtual RTTR_INLINE void* get_ptr() { return reinterpret_cast<void*>(this); } virtual RTTR_INLINE rttr::detail::derived_info get_derived_info() { return {reinterpret_cast<void*>(this), rttr::detail::get_type_from_instance(this)}; } using base_class_list = TYPE_LIST(__VA_ARGS__); private:
#define RTTR_ENABLE(__VA_ARGS__)
#define RTTR_ENABLE(__VA_ARGS__) public: virtual RTTR_INLINE rttr::type get_type() const { return rttr::detail::get_type_from_instance(this); } virtual RTTR_INLINE void* get_ptr() { return reinterpret_cast<void*>(this); } virtual RTTR_INLINE rttr::detail::derived_info get_derived_info() { return {reinterpret_cast<void*>(this), rttr::detail::get_type_from_instance(this)}; } using base_class_list = TYPE_LIST(__VA_ARGS__); private:
